name: CD
on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Verify version match
        run: |
          poetry_version=$(poetry version -s)
          git_tag_version=${GITHUB_REF#refs/tags/v}
          if [ "$poetry_version" != "$git_tag_version" ]; then
            echo "Version mismatch: pyproject.toml ($poetry_version) vs tag ($git_tag_version)"
            exit 1
          fi
            
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          
      - name: Install Poetry
        run: pip install poetry==1.8.2
        
      - name: Build package
        run: poetry build
        
      - name: Verify build
        run: |
          pip install dist/*.whl
          python -c "import timemesh; print(f'Successfully installed {timemesh.__version__}')"
          
      - name: Publish to PyPI
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry publish
